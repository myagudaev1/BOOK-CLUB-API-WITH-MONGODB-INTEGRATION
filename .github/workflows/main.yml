name: main

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Log Workflow Start Time
        run: |
          echo "$(date -Iminutes)" >> log.txt
          echo "Mikhail Yagudaev" >> log.txt
      - name: Build the Docker Image
        run: |
          docker build -t book-service ./books && echo "image successfully built" >> log.txt || (echo "image not able to be built" >> log.txt && exit 1)
          docker save book-service -o book-service-image.tar
      - name: Upload Image to GitHub
        uses: actions/upload-artifact@v3
        with:
          name: book-service-image
          path: book-service-image.tar
      - name: Upload Log File
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: log-file
          path: log.txt

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Download Log File
        uses: actions/download-artifact@v3
        with:
          name: log-file
          path: .
      - name: Download Docker Image
        uses: actions/download-artifact@v3
        with:
          name: book-service-image
          path: .
      - name: Load Docker Image
        run: docker load --input book-service-image.tar
      - name: Run Docker Container
        run: |
          > test_results.txt
          docker compose up -d
      - name: Check Container Status
        if: always()
        run: |
          running=$(docker compose ps --services --filter "status=running")
          services=$(docker compose ps --services)
          if [ "$running" == "$services" ]; then
            echo "Container up and running" >> log.txt
          else
            echo "Container failed to run" >> log.txt
            exit 1
          fi
      - name: Set Up Python
        uses: actions/setup-python@v4
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install requests
      - name: Test with Pytest
        run: |
          pytest -v tests/test1.py > test_results.txt
        continue-on-error: true
      - name: Check test results
        run: |
          if grep -q "failed" test_results.txt; then 
            echo "tests failed" >> log.txt
            exit 1
          else
            echo "tests succeeded" >> log.txt
          fi
      - name: Upload Log File
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: log-file
          path: log.txt
      - name: Upload Results File
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: results-file
          path: test_results.txt

  query:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Download Docker Image
        uses: actions/download-artifact@v3
        with:
          name: book-service-image
          path: .
      - name: Load Docker Image
        run: docker load --input book-service-image.tar
      - name: Run Docker Container
        run: |
          > response.txt
          docker compose up -d
      - name: Set Up Python
        uses: actions/setup-python@v4
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      - name: Run Queries
        run: python query.py > response.txt
      - name: Upload Response File
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: response-file
          path: response.txt
      - name: Remove image
        if: always()
        uses: geekyeggo/delete-artifact@v2
        with:
          name: book-service-image
